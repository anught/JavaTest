非静态方法 竞争的是同一个对象里的锁
静态方法 竞争的是同一个类里的锁

代码块里的锁:
	获取对象锁
	synchronized(this|object) {}   对象锁
	获取类锁
	synchronized(类.class) {}      类锁      代码块竞争同一个类的锁

	
1、对于静态方法，由于此时对象还未生成，所以只能采用类锁；

2、只要采用类锁，就会拦截所有线程，只能让一个线程访问。

3、对于对象锁（this），如果是同一个实例，就会按顺序访问，但是如果是不同实例，就可以同时访问。

4、如果对象锁跟访问的对象没有关系，那么就会都同时访问。
